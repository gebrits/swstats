{"version":3,"sources":["swstats.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","$","SWindow","window","sum","currval","newitems","olditems","allitems","newstats","oldstats","undefined","ln","lo","j","v","freq","sums","total","res","mode","map","push","k","sort","b","pop","NOps","COps","IVAL","LIST","TYPES","numeric","category","DEF_OPS","DEF_OPTIONS","type","ops","step","OPS","fn","count","deps","avg","stdev","clone","obj","register","name","def","depends","indexOf","reduce","curr","val","sortOps","forEach","op","dep","tmp","it","setInterval","now","Date","filter","sws","_pause","arr","_arr","time","_time","_type","old","stats","shift","_ops","TimeStats","options","_options","_step","_active","_oldstats","vals","Array","_pushNum","_pushCat","last","diff","idx","splice","oa","na","item","SizeStats","size","_size","len","nvl","ovl","isNaN","sqsum","oavg","oldavg","oldsqsum","oldsum","newavg","newsqsum","newsum","Math","sqrt"],"mappings":"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","file":"swstats.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n(function($) {\n\tvar SWindow = require(\"./main.js\");\n\t$.SWindow = SWindow;\n})(window);\n\n},{\"./main.js\":3}],2:[function(require,module,exports){\nmodule.exports = {\n\tsum(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tcurrval = currval===undefined? {} : currval;\n\t\tvar ln = newitems.length, lo = olditems.length;\n\t\tfor(let i=0;i<ln;i++) {\n\t\t\tfor(let j in newitems[i].v) {\n\t\t\t\tcurrval[j] = currval[j] || 0;\n\t\t\t\tcurrval[j] += newitems[i].v[j];\n\t\t\t}\n\t\t}\n\t\tfor(let i=0;i<lo;i++) {\n\t\t\tfor(let j in olditems[i].v) {\n\t\t\t\tcurrval[j] = currval[j] || 0;\n\t\t\t\tcurrval[j] -= olditems[i].v[j];\n\t\t\t}\n\t\t}\n\t\treturn currval;\n\t},\n\tfreq(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar sums = newstats.sum;\n\t\tvar total = 0, res = {};\n\t\tfor(let i in sums) total += sums[i];\n\t\tfor(let i in sums) res[i] = sums[i] / total;\n\t\treturn res;\n\t},\n\tmode(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar sums = newstats.sum;\n\t\tvar map = [];\n\t\tfor(let i in sums) map.push({k:i,t:sums[i]});\n\t\tmap.sort((a,b)=>a.t-b.t);\n\t\treturn (map.pop()||{}).k;\n\t}\n}\n\n},{}],3:[function(require,module,exports){\nconst NOps = require(\"./nops.js\");\nconst COps = require(\"./cops.js\");\n\nconst IVAL = 1000;\t// Slide window interval\nconst LIST = [];\t\t// Active window instances\n\n// Stats function type constants\nconst TYPES = {\n\tnumeric : \"numeric\",\n\tcategory : \"category\"\n};\n\n// Default operations\nconst DEF_OPS = {\n\tnumeric : [\"count\",\"sum\",\"avg\",\"stdev\"],\n\tcategory : [\"sum\",\"freq\",\"mode\"]\n};\n\n// Default options\nconst DEF_OPTIONS = {\n\ttype : TYPES.numeric,\n\tops : DEF_OPS.numeric,\n\tstep : 1000\n};\n\n// Registered operations\nconst OPS = {\n\tnumeric : {\n\t\t\"count\" : {fn:NOps.count,deps:[]},\n\t\t\"sum\" : {fn:NOps.sum,deps:[]},\n\t\t\"avg\" : {fn:NOps.avg,deps:[]},\n\t\t\"stdev\" : {fn:NOps.stdev,deps:[\"avg\"]},\n\t},\n\tcategory : {\n\t\t\"sum\" : {fn:COps.sum,deps:[]},\n\t\t\"freq\" : {fn:COps.freq,deps:[\"sum\"]},\n\t\t\"mode\" : {fn:COps.mode,deps:[\"sum\"]}\n\t}\n};\n\n/**\n * Simple object clone function\n */\nfunction clone(obj) {\n\tif(typeof(obj)!=\"object\") {\n\t\treturn obj;\n\t}\n\telse {\n\t\tvar o = {};\n\t\tfor(var i in obj) o[i] = clone(obj[i]);\n\t\treturn o;\n\t}\n}\n\n/**\n * Registers a new operation\n * @param type [TYPES.numeric / TYPES.category]\n * @param name The name of the stat function\n * @param deps Array of dependency names\n * @param fn Stats function to be called, in the form of\n * fn(currval,newitems,olditems,allitems,newstats,oldstats)\n * @param def Use by default.\n */\nfunction register(type,name,deps,fn,def) {\n\tOPS[type][name] = {fn:fn,deps:deps};\n\tif(def) DEF_OPS[type].push(name);\n}\n\nfunction depends(a,b,type) {\n\tvar deps = OPS[type][a].deps;\n\tif(!deps.length) return false;\n\telse if(deps.indexOf(b)>=0) return true;\n\telse {\n\t\treturn deps.reduce((curr,val)=>curr||depends(val,b,type),false);\n\t}\n}\n\n/**\n * Sorts category operations by its dependencies\n */\nfunction sortOps(ops,type) {\n\tvar map = {}, n = false;\n\n\tops.forEach(op=>map[op] = true);\n\tdo {\n\t\tn = false;\n\t\tops.forEach(op=>{\n\t\t\tOPS[type][op].deps.forEach(dep=>{\n\t\t\t\tif(!map[dep]) {\n\t\t\t\t\tmap[dep] = true;\n\t\t\t\t\tops.push(dep);\n\t\t\t\t\tn = true;\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}while(n);\n\n\t// Stupid sort because Array.sort will not work with dependency sorting\n\tif(ops.length>1) {\n\t\tlet tmp = null, it = false;\n\t\tdo {\n\t\t\tit = false;\n\t\t\tfor(let i=0;i<ops.length;i++) {\n\t\t\t\tfor(let j=i;j<ops.length;j++) {\n\t\t\t\t\tif(depends(ops[i],ops[j],type)) {\n\t\t\t\t\t\ttmp = ops[i];\n\t\t\t\t\t\tops[i] = ops[j];\n\t\t\t\t\t\tops[j] = tmp;\n\t\t\t\t\t\tit = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}while(it);\n\t}\n}\n\n/**\n * Slide time window interval\n */\nsetInterval(()=>{\n\tvar now = Date.now();\n\n\t// For each stat created object\n\tLIST.filter(sws=>!sws._pause).forEach(sws=>{\n\t\tvar arr = sws._arr, time = sws._time;\n\t\tvar type = sws._type;\n\t\tvar old = [];\n\t\tvar oldstats = clone(sws.stats);\n\n\t\t// Remove slots whose date has expired\n\t\twhile(arr.length && now-arr[0].t>time)\n\t\t\told.push(arr.shift());\n\n\t\t// Execute each stat operation over the remaining slots\n\t\tsws._ops.forEach(op=>{\n\t\t\tsws.stats[op] = OPS[type][op].fn(sws.stats[op],[],old,sws._arr,sws.stats,oldstats);\n\t\t});\n\t});\n},IVAL);\n\n/**\n * TimeStats Slide Window\n * @param time Time (ms) of the duration of the window, before slide\n * @param options Object\n */\nclass TimeStats {\n\tconstructor(time,options) {\n\t\toptions = options || DEF_OPTIONS;\n\t\tthis._options = options;\n\t\tthis._arr = [];\n\t\tthis._time = time || 10000;\n\t\tthis._type = options.type || DEF_OPTIONS.type;\n\t\tthis._ops = options.ops || DEF_OPS[this._type];\n\t\tthis._step = options.step || DEF_OPTIONS.step;\n\t\tthis._pause = false;\n\t\tthis._active = true;\n\t\tthis._oldstats = {};\n\t\tthis.stats = clone(options.stats||{});\n\n\t\tsortOps(this._ops,this._type);\n\t\tLIST.push(this);\n\t}\n\n\tget length() {\n\t\treturn this._arr.length;\n\t}\n\n\tclean() {\n\t\tthis._arr = [];\n\t\tthis._oldstats = {};\n\t\tthis.stats = clone(this._options.stats||{});\n\t}\n\n\tpush(vals) {\n\t\tif(!this._active || this._pause) return;\n\n\t\tvals = vals instanceof Array? vals : [vals];\n\n\t\treturn this._type==TYPES.numeric?\n\t\t\tthis._pushNum(vals) :\n\t\t\tthis._pushCat(vals);\n\t}\n\n\tpause() {\n\t\tthis._pause = true;\n\t}\n\n\tresume(shift) {\n\t\tvar arr = this._arr;\n\t\tif(shift && arr.length) {\n\t\t\tvar now = Date.now();\n\t\t\tvar last = arr[arr.length].t;\n\t\t\tvar diff = now - last;\n\t\t\tarr.length.forEach(v=>v.t+=diff);\n\t\t}\n\t\tthis._pause = false;\n\t}\n\n\tdestroy() {\n\t\tvar idx = LIST.indexOf(this);\n\t\tLIST.splice(idx,1);\n\t\tthis._active = false;\n\t}\n\n\t_pushNum(vals) {\n\t\tvar now = Date.now();\n\t\tvar arr = this._arr;\n\t\tvar type = this._type;\n\t\tvar oldstats = clone(this.stats);\n\n\t\tvals = vals.map(v=>{return {t:now,v:v,l:1};});\n\n\t\tif(!arr.length) arr.push({t:now,v:0,l:0});\n\t\tvar last = clone(arr[arr.length-1]);\n\n\t\tif(now-last.t < this._step) {\n\t\t\tvals.forEach(v=>{last.v+=v.v; last.l+=1;});\n\t\t\tvar oa = [arr.pop()], na = [last];\n\t\t\tarr.push(last);\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvals.forEach(v=>{arr.push(v)});\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],vals,[],arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t_pushCat(vals) {\n\t\tvar now = Date.now();\n\t\tvar arr = this._arr;\n\t\tvar type = this._type;\n\t\tvar oldstats = clone(this.stats);\n\t\tvar map = {}\n\n\t\tvals.forEach(v=>{\n\t\t\tmap[v] = map[v] || 0;\n\t\t\tmap[v]++;\n\t\t});\n\n\t\tif(!arr.length) arr.push({t:now,v:{}});\n\t\tvar last = clone(arr[arr.length-1]);\n\n\t\tif(now-last.t < this._step) {\n\t\t\tfor(let i in map) {\n\t\t\t\tlast.v[i] = last.v[i] || 0;\n\t\t\t\tlast.v[i] += map[i];\n\t\t\t}\n\t\t\tvar oa = [arr.pop()], na = [last];\n\t\t\tarr.push(last);\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],na,oa,arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvar item = {t:now,v:map};\n\t\t\tarr.push(item);\n\t\t\tthis._ops.forEach(op=>{\n\t\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],[item],[],arr,this.stats,oldstats);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * SizeStats Slide Window\n * @param size Number of maximum slots before slide\n * @param options Object\n */\nclass SizeStats {\n\tconstructor(size,options) {\n\t\toptions = options || DEF_OPTIONS;\n\n\t\tthis._options = options;\n\t\tthis._arr = [];\n\t\tthis._size = size || 1000;\n\t\tthis._type = options.type || DEF_OPTIONS.type;\n\t\tthis._ops = options.ops || DEF_OPS[this._type];\n\t\tthis.stats = clone(options.stats||{});\n\n\t\tsortOps(this._ops,this._type);\n\t}\n\n\tclean() {\n\t\tthis._arr = [];\n\t\tthis._oldstats = {};\n\t\tthis.stats = clone(this._options.stats||{});\n\t}\n\n\tget length() {\n\t\treturn this._arr.length;\n\t}\n\n\tpush(vals) {\n\t\tvals = vals instanceof Array? vals : [vals];\n\n\t\treturn this._type==TYPES.numeric?\n\t\t\tthis._pushNum(vals) :\n\t\t\tthis._pushCat(vals);\n\t}\n\n\t_pushNum(vals) {\n\t\tvar arr = this._arr, old = [];\n\t\tvar type = this._type;\n\t\tvar oldstats = clone(this.stats);\n\n\t\tvals = vals.map(v=>{return {v:v,l:1};});\n\t\tvals.forEach(v=>this._arr.push(v));\n\n\t\twhile(this._arr.length>this._size) {\n\t\t\told.push(this._arr.shift());\n\t\t}\n\n\t\tthis._ops.forEach(op=>{\n\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],vals,old,arr,this.stats,oldstats);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\t_pushCat(vals) {\n\t\tvar arr = this._arr, old = [];\n\t\tvar type = this._type;\n\t\tvar oldstats = clone(this.stats);\n\t\tvar map = {v:{}};\n\n\t\tvals.forEach(v=>{\n\t\t\tmap.v[v] = map.v[v] || 0;\n\t\t\tmap.v[v]++;\n\t\t});\n\t\tthis._arr.push(map);\n\n\t\twhile(this._arr.length>this._size) {\n\t\t\told.push(this._arr.shift());\n\t\t}\n\n\t\tthis._ops.forEach(op=>{\n\t\t\tthis.stats[op] = OPS[type][op].fn(this.stats[op],[map],old,arr,this.stats,oldstats);\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\nmodule.exports = {\n\tTimeStats : TimeStats,\n\tSizeStats : SizeStats,\n\tregister : register\n};\n\n},{\"./cops.js\":2,\"./nops.js\":4}],4:[function(require,module,exports){\nconst OPS = {\n\tcount(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar t = 0, len = allitems.length;\n\t\tfor(var i=0;i<len;i++) t += (allitems[i].l||1);\n\t\treturn t;\n\t},\n\tsum(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tcurrval = currval===undefined? 0 : currval;\n\t\tvar ln = newitems.length, lo = olditems.length;\n\t\tfor(let i=0;i<ln;i++) currval += newitems[i].v;\n\t\tfor(let i=0;i<lo;i++) currval -= olditems[i].v;\n\n\t\treturn currval;\n\t},\n\tavg(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\tvar\n\t\t\tln = OPS.count(0,0,0,newitems), lo = OPS.count(0,0,0,olditems),\n\t\t\tnvl = OPS.count(0,0,0,allitems), ovl = nvl-ln+lo;\n\n\t\tcurrval = currval===undefined? 0 : currval;\n\t\tcurrval = currval * ovl;\n\n\t\tfor(let i=0;i<newitems.length;i++) currval += newitems[i].v;\n\t\tfor(let i=0;i<olditems.length;i++) currval -= olditems[i].v;\n\t\tcurrval = currval / nvl;\n\t\treturn isNaN(currval)? 0 : currval;\n\t},\n\tstdev(currval,newitems,olditems,allitems,newstats,oldstats) {\n\t\toldstats.stdev = oldstats.stdev || {avg:1,sqsum:0,sum:0,stdev:0};\n\n\t\tvar\n\t\t\tln = OPS.count(0,0,0,newitems), lo = OPS.count(0,0,0,olditems),\n\t\t\tnvl = OPS.count(0,0,0,allitems), ovl = nvl-ln+lo,\n\t\t\tlen = allitems.length,\n\t\t\toavg = oldstats.avg || 0;\n\n\t\tvar oldavg = oldstats.stdev.avg;\n\t\tvar oldsqsum = oldstats.stdev.sqsum;\n\t\tvar oldsum = oldstats.stdev.sum;\n\t\tvar newavg = newstats.avg || 0;\n\t\tvar newsqsum = oldsqsum;\n\t\tvar newsum = oldsum;\n\n\t\tfor(let i=0;i<olditems.length;i++) {\n\t\t\tlet it = olditems[i].v / (olditems[i].l||1);\n\t\t\tnewsqsum -= it*it;\n\t\t\tnewsum -= it;\n\t\t}\n\n\t\tfor(let i=0;i<newitems.length;i++) {\n\t\t\tlet it = newitems[i].v / (newitems[i].l||1);\n\t\t\tnewsqsum += it*it;\n\t\t\tnewsum += it;\n\t\t}\n\n\t\tvar stdev = Math.sqrt((newsqsum - 2*newavg*newsum + len*newavg*newavg) / len);\n\t\treturn {\n\t\t\tavg : newavg,\n\t\t\tsqsum : newsqsum,\n\t\t\tsum : newsum,\n\t\t\tstdev : stdev\n\t\t}\n\t}\n}\n\nmodule.exports = OPS;\n\n},{}]},{},[1]);\n"]}